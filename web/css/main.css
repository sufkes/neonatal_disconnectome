:root {
  --border-radius: 5px;
  --ratio: 3.74;

  --width-card-wide: 800px;
  --width-content: 1080px;

}

:root {
  --color-border: #898EA4;

  --color-bg: #fff;
  --color-bg-secondary: #e9e9e9;

  --color-text: #000;
  --color-text-secondary: #999;

  --color-primary: #0074d9;
  --color-success: #2ecc40;
  --color-error: #ff4136;
  --color-warning: #ff851b;
}

details {
  border: 1px solid;
  padding: 0 1rem;
  background: var(--color-bg);
}

details+details {
  border-top: none;
}

details[open] {
  padding-bottom: 1em;
}

summary {
  padding: 1rem 1em 1rem 0;
  font-weight: bold;
  cursor: pointer;
}

summary {
  position: relative;
}

summary::marker {
  content: none;
}

summary::before,
summary::after {
  content: '';
}

summary::before,
summary::after {
  width: .75em;
  height: 0;
  border-bottom: 2px solid;
  position: absolute;
  top: calc(50% - 1px);
  right: 0;
  transform: translateY(-50%);
}

summary::after {
  transform: rotate(90deg);
  transform-origin: 50% 50%;
}

[open] summary::after {
  transform: rotate(0deg);
}

summary.success {
  color: var(--color-success)
}

summary.warning {
  color: var(--color-warning)
}

summary.grayscale {
  opacity: 0.6;
}

#app {
  height: 100vh;
  display: grid;
  grid-template-columns: 1fr;
  grid-template-rows: auto 1fr;
  grid-template-areas:
    'header'
    'main';
  gap: 2rem
}

#app>nav {
  grid-area: header;
  position: relative !important;
}

#app>main {
  grid-area: main;
  display: grid;
  grid-template-rows: 1fr auto;
  grid-template-columns: 2fr 1fr;
  gap: 1rem;
  padding: 0 0.6em;

}

main>footer {
  grid-area: 2 / 1 / 3 / 3;
  justify-self: center;
}

form {
  padding: 1rem;
}

/* Dim and disable the button while the form is invalid */
form.active:invalid~footer #next {
  opacity: 0.3;
}

.form-group {
  margin-bottom: 1.5rem;
  position: relative;
}

.invalid-input {
  background-color: #ffdddd;
}

.progress-bar {
  height: 4px;
  background: #e5e7eb;
  border-radius: 2px;
  margin-bottom: 1.5rem;
  overflow: hidden;
}

.progress-fill {
  height: 100%;
  background: var(--color-primary);
  transition: width 0.3s ease;
  width: 0%;
}

input.invalid {
  border-color: var(--color-error);
  background: #fef2f2;
  animation: shake 0.5s cubic-bezier(.36, .07, .19, .97) both;
}

@keyframes shake {

  10%,
  90% {
    transform: translateX(-1px);
  }

  20%,
  80% {
    transform: translateX(2px);
  }

  30%,
  50%,
  70% {
    transform: translateX(-4px);
  }

  40%,
  60% {
    transform: translateX(4px);
  }
}

input.valid {
  border-color: var(--color-success);
  animation: success 0.5s ease;
}

@keyframes success {
  0% {
    transform: scale(1);
  }

  50% {
    transform: scale(1.02);
  }

  100% {
    transform: scale(1);
  }
}

.error {
  position: absolute;
  color: var(--color-error);
  font-size: 0.75rem;
  margin-top: 0.25rem;
  display: none;
  opacity: 0;
  transform: translateY(-10px);
  transition: all 0.2s ease;
}

.error.visible {
  display: block;
  opacity: 1;
  transform: translateY(0);
}

.container {}

.previewImage {
  width: 50%
}

.output>div {
  padding: 1rem;
}

.footer {
  position: fixed;
  left: 0;
  bottom: 0;
  width: 100%;
  text-align: center;
  height: 3em;
  padding: 0 .6em;
  background: var(--color-bg);
  box-shadow: 0 0 .2em rgba(170, 170, 170, .2);
  z-index: 10000;
  transition: all .3s;
  transform-style: preserve-3d;
}


.file {
  display: inline-flex;
  align-items: center;
  justify-content: flex-start;
  border-radius: var(--border-radius);
  border-width: 1px;
  border-color: var(--color-bg-secondary);
  border-style: solid;
  padding: 0.4rem 0.8rem;
  width: 100%;
  margin-bottom: 1rem;
}

.fileButton {
  flex: 0 0 auto;
  width: auto;
  border-radius: var(--border-radius);
  border-width: 1px;
  border-color: var(--color-text);
  border-style: solid;
  background: #e6e6e6;
  padding: 0.1rem 0.5rem;
  cursor: pointer;
}

.fileButton:hover {
  background: var(--color-text-secondary);
}

.fileInput {
  background-color: var(--color-bg);
  margin-bottom: 0;
  border: 0;
  cursor: default;
  caret-color: transparent;
}

.fileInput:focus {
  outline: none;
  border: none;
}

.fileInput:focus-visible {
  outline: none;
  border: none;
}

.fileInput:enabled:hover {}

.hide {
  display: none;
}

.right {
  float: right;
}

.next {
  margin: 0 !important
}

pre {
  position: relative;
  background-color: #f3f3f3;
  padding: 15px;
  border-radius: 5px;
  font-family: monospace;
  overflow-x: auto;
}

.copy-btn {
  position: absolute;
  top: 10px;
  left: 10px;
  background-color: #4CAF50;
  color: white;
  border: none;
  padding: 5px 10px;
  cursor: pointer;
  border-radius: 3px;
  font-size: 12px;
}

.copy-btn:active {
  background-color: #45a049;
}

/*
 * By default we mark text with 0 opacity and
 * transition here is used for leaving state
 */
.text {
  opacity: 0;
  transition: opacity 225ms cubic-bezier(0.25, 0.46, 0.45, 0.94);
}

/*
 * This class is for fade in effect which remains
 * even after transiton is over
 */
.fade {
  opacity: 1;
  transition: opacity 300ms cubic-bezier(0.55, 0.085, 0.68, 0.53);
}



/* styling the loading dialog box */

::backdrop {
  background: rgba(255, 255, 255, 0.5);
  backdrop-filter: blur(10px);
  -webkit-backdrop-filter: blur(10px);
}

dialog {
  border: none !important;
  border-radius: calc(5px * var(--ratio));
  box-shadow: 0 0 #0000, 0 0 #0000, 0 25px 50px -12px rgba(0, 0, 0, 0.25);
  min-width: var(--width-card-wide);
  max-width: var(--width-content);
}

dialog>* {
  max-width: 100%;
  display: block;
}

dialog> :last-child {
  margin-bottom: 0;
}

dialog header {
  font-weight: bold;
  position: relative;
  border-bottom: 1px solid #aaa;
  padding: .6em .8em;
}

dialog header h3 {
  padding: 0;
  margin: 0 2em 0 0;
  line-height: 1;
  display: inline-block;
  vertical-align: text-bottom;
}

dialog header .close {
  position: absolute;
  top: .4em;
  right: .3em;
  font-size: 1.2em;
  padding: 0 .5em;
  cursor: pointer;
  width: auto
}

dialog header .close:hover {
  color: var(--color-error)
}

dialog section {
  padding: .6em .8em 0;
}

dialog footer {
  padding: 0.8em;
  display: flex;
  align-items: center;
  justify-content: center;
}

@keyframes spinner {
  to {
    transform: rotate(360deg);
  }
}

.spinner::before {
  content: "";
  box-sizing: border-box;
  position: absolute;
  left: 50%;
  width: 24px;
  height: 24px;
  margin-top: -12px;
  margin-left: -12px;
  border-radius: 50%;
  border: 2px solid transparent;
  border-top-color: #07d;
  border-bottom-color: #07d;
  animation: spinner 800ms ease infinite;
}


#warpSubjectToAgeMatchedForm {
  display: none;
  left: calc(var(--width-content) + 50px);
}

#form1a {
  display: none;
  left: calc(var(--width-content) + 50px);
}

#generateDisconnectomeForm {
  display: none;
  left: calc(var(--width-content) + 50px);
}

#result {
  display: none;
  left: calc(var(--width-content) + 50px);
  width: calc(var(--width-content) - 50px);
  padding: 1rem;
}
